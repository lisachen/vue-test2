<template>
    <div class="post-images">
        <div class="form-group">
          <label>Description</label>
          <textarea class="form-control" v-model="description" placeholder="Required 5-300 characters."></textarea>
        </div>
        <div class="form-group">
            <label>Cover</label>
            <div class="form-control">
                <img :src="coverUrl" class="cover-img mr10">
                <input type="file" class="btn-file" @change="changeCover" accept="image/png,image/jpeg,image/gif,image/jpg"/>
                <a class="btn-upload ">Change</a>
            </div>
        </div>
        <div class="form-group">
            <label>Images</label>
            <div class="form-control">
                <span class="mr10">Required 4-50 pictures.</span>
                <input type="file" class="btn-file" @change="changeImages" ref="inputer" multiple accept="image/png,image/jpeg,image/gif,image/jpg"/>
                <a class="btn-upload ">Upload</a>
                <div class="show-images" v-if="imagesUrl!=''">
                    <div class="img" v-for="(item,index) in imagesUrl">
                        <img :src="item" >
                        <a title="Removing image" @click="delImg(index)">x</a>
                    </div>    
                </div>    
            </div>
        </div>

        <div class="form-group">
          <label>Tages</label>
          <input type="text" class="form-control input-tag" id="tags" placeholder="Enter separated tages">
          <p class="tags">Featured Tags  <span v-for="tag in featruredTags" @click="addTage(tag)">{{tag}}</span></p>
        </div>
        <div class="btn-group"><button class="btn btn-l btn-org mr20">Close</button><div class="btn btn-l btn-green" @click="editPost">Post</div></div>
    </div>
</template>

<script>
    export default{
        data(){
            return{
                type:'images',
                description:'',
                coverUrl:'http://placehold.it/100x100',
                imagesUrl:[],
                featruredTags:['mange','review','light novel'] ,
                tags:[],
                articleData:[],
                id:this.$route.params.id
            }
        },
        mounted: function() {
            this.$nextTick(function() {
                this.postType();
                $('.input-tag').tagsInput();
                if(typeof this.id !== "undefined"){
                    this.getContentList();
                    $('#selectType').attr('disabled','disabled');
                }
            })
        },
        methods: { 
            postType: function(){
                this.$emit('v-type',this.type);
            },
            addTage(tag){
                if ($('.input-tag').tagExist(tag)) {  
                    alert('tag已存在！');
                }else{
                   $('.input-tag').addTag(tag); 
                }    
            },
            changeCover(){
                this.$http.post('http://local.api.animesama.com:888/web/upload', {
                }).then(response=>{
                    this.coverUrl=response.data[0];
                }).catch(error=> {
                    console.log(error);
                });
            },
            changeImages(e){
                let inputDOM = this.$refs.inputer;
                // 通过DOM取文件数据
                 this.fil = inputDOM.files;
                for (var i = 0; i < this.fil.length; i++) {
                    let size = Math.floor(this.fil[i].size / 1024);
                    if (size > 2*1024*1024) {
                        alert('File size is too large!');
                        return false
                    } 
                    this.imagesUrl.push(this.getObjectURL(this.fil[i]));
                } 
            },
            getObjectURL(file) {
                var url = null ;
                if (window.createObjectURL!=undefined) { // basic
                    url = window.createObjectURL(file) ;
                } else if (window.URL!=undefined) { // mozilla(firefox)
                    url = window.URL.createObjectURL(file) ;
                } else if (window.webkitURL!=undefined) { // webkit or chrome
                    url = window.webkitURL.createObjectURL(file) ;
                }
                return url ;
            },
            delImg(index){
                this.imagesUrl.splice(index, 1);;
            },      
            editPost(){
                let tags=$('.input-tag').val();
                if(typeof tags!=='undefined'){
                    this.tags=$('.input-tag').val().split(",");
                }
                console.log(this.type);
                console.log(this.description);
                console.log(this.coverUrl);
                console.log(this.imagesUrl);
                console.log(this.tags);
                
            },
            getContentList(){
              this.$http.get('http://local.api.animesama.com:888/web/feedDetail/'+this.id).then(res=>{
                this.articleData=res.data;
                this.title=this.articleData.title;
                this.articleData.tags.forEach((item, index)=>{
                    this.tags.push(item.name);
                })
                $('.input-tag').importTags(this.tags.toString());

              })
            },
            saveEdit(){
                
            }
        }
    }
</script>
